# Generated by Django 2.2.10 on 2020-02-25 11:41
from django.apps import apps
from django.db import migrations, models


def create_subject_matter_expert_group(app, schema_editor):
    # Trigger post-migrate steps for the `auth` app, which will create
    # custom model permissions that otherwise might not be created if this
    # migration runs in the same migration group as the one which adds the
    # permissions.
    # https://code.djangoproject.com/ticket/23422
    #
    # We can't just use `django.core.management.sql.emit_post_migrate_signal` because
    # that will emit post-migrate for every enabled app, some of which might depend
    # on migrations that haven't been run yet (if, for example, we are enabling a new
    # app). For example, when we enabled the `sites` app:
    #
    # * If we added the new app's migration as a dependency of this one, then existing
    #   environments failed to migrate due to a MigrationHistoryInconsistency.
    # * If we ran post-migrate for all apps, then new environments ran post-migrate for
    #   the new `sites` app before running the migrations from the `sites` app, leading
    #   to "table doesn't exist" errors.
    db_alias = schema_editor.connection.alias
    models.signals.post_migrate.send(
        sender=apps.get_app_config('auth'),
        app_config=apps.get_app_config('auth'),
        verbosity=2,
        interactive=False,
        using=db_alias,
    )

    Group = app.get_model('auth', 'Group')
    Permission = app.get_model('auth', 'Permission')
    sme = Group.objects.get_or_create(name="Subject Matter Experts")[0]
    perms = Permission.objects.filter(
        codename__in=[
            'manage_unpublished_master_datasets',
            'manage_unpublished_datacut_datasets',
        ]
    )
    sme.permissions.add(*perms)
    sme.save()


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "__latest__"),
        ("datasets", "0038_add_permissions_and_customdatasetquery_defaults"),
    ]

    operations = [migrations.RunPython(create_subject_matter_expert_group)]
